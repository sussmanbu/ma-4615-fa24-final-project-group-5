{
  "hash": "8b52367c27b5fa5de6d2a2c1c702e118",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog Post 5\"\nauthor: \"Group 5\" \ndate: \"2024-11-11\"\ndate-modified: \"2024-11-11\"\ndraft: FALSE\n---\n\n\n\nPreviously in Blog Post 4, we explored two breakdowns of the 2017 dataset, focusing on race and gender. For Blog Post 5, our goal is to extend this analysis to the 2022 dataset, creating similar breakdowns for comparison. This will allow us to visually contrast the 2017 and 2022 data.\n\nSince we already have 2017 images in Blog Post 3 and 4, this post will be dedicated to 2022 coding scripts.\n\nIn addition, we have found another dataset that details the wage data associated with all of the jobs listed under the NAICS standard of categorization, logging average hourly wages in October 2023, and August, September, and October 2024. Although the format does not make direct matching to our existing dataset easy, we hope to parse through the data (possibly manually) and use it to assign wage values to our existing race and gender distributions for the different kinds of employment. This information can be useful in exploring potential earning gaps between groups, as well as examining the change in earnings over time. By the time we complete processing the data, we hope to have the information included here as an additional column of our table that we can use in our analysis. Further exploration is warranted in the feasibility of transferring the online table into some kind of csv that can be read into an R script directly.\n\nHere is the link for the wage data context: https://www.bls.gov/web/empsit/ceseeb3a.htm \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n library(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n library(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/emilymusiclin/Downloads/CAS MA 415/ma-4615-fa24-final-project-group-5\n```\n\n\n:::\n\n```{.r .cell-code}\n employment_2022 <- readRDS(\"dataset/EEO1_2022_PUF.rds\")\n employment_2022[employment_2022 == \"*\"] <- NA\n\n total_columns <- c(\"TOTAL1\", \"TOTAL2\", \"TOTAL3\", \"TOTAL4\", \"TOTAL5\", \"TOTAL6\", \"TOTAL7\", \"TOTAL8\", \"TOTAL9\", \"TOTAL1_2\")\n\n employment_2022[total_columns] <- lapply(employment_2022[total_columns], function(x) as.numeric(x))\n\n employment_2022[total_columns] <-\n   lapply(employment_2022[total_columns], function(x) replace_na(x, 0))\n\n total_counts <- colSums(employment_2022[total_columns], na.rm = TRUE)\n\n proportion_df <- data.frame(Job_Type = names(total_counts), Count = total_counts)\n\n proportion_df$Job_Type <- recode(proportion_df$Job_Type,\n   TOTAL1 = \"Senior Officers and Managers\",\n   TOTAL2 = \"Professionals\",\n   TOTAL3 = \"Technicians\",\n   TOTAL4 = \"Sales Workers\",\n   TOTAL5 = \"Clericals\",\n   TOTAL6 = \"Craft\",\n   TOTAL7 = \"Operatives\",\n   TOTAL8 = \"Laborers\",\n   TOTAL9 = \"Services\",\n   TOTAL1_2 = \"Mid Officers and Managers\"\n )\n\n proportion_df <- proportion_df %>%\n   mutate(Proportion = Count / sum(Count))\n\n ggplot(proportion_df, aes(x = Job_Type, y = Proportion, fill = Job_Type)) +\n   geom_bar(stat = \"identity\") +\n   labs(title = \"Proportionality of Jobs by Type\",\n        x = \"Job Type\",\n        y = \"Proportion\") +\n   theme_gray() +\n   scale_y_continuous(labels = scales::percent) +\n   theme(legend.position = \"none\",\n         axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Blog-Post-5_files/figure-html/t2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n race_columns <- c(\"WHT10\", \"BLKT10\", \"HISPT10\", \"ASIANT10\", \"AIANT10\", \"nhopiT10\", \"tomrT10\")\n\n employment_2022[race_columns] <- lapply(employment_2022[race_columns], function(x) as.numeric(x))\n\n employment_2022[race_columns] <-\n   lapply(employment_2022[race_columns], function(x) replace_na(x, 0))\n\n total_race_counts <- colSums(employment_2022[race_columns], na.rm = TRUE)\n\n race_proportion_df <- data.frame(Race = names(total_race_counts), Count = total_race_counts)\n\n race_proportion_df$Race <- recode(race_proportion_df$Race,\n   WHT10 = \"White\",\n   BLKT10 = \"Black or African American\",\n   HISPT10 = \"Hispanic\",\n   ASIANT10 = \"Asian\",\n   AIANT10 = \"American Indian or Alaska Native\",\n   nhopiT10 = \"Native Hawaiian or Other Pacific Islander\",\n   tomrT10 = \"Two or more Races\"\n )\n\n race_proportion_df <- race_proportion_df %>%\n   mutate(Proportion = Count / sum(Count))\n\n ggplot(race_proportion_df, aes(x = Race, y = Proportion, fill = Race)) +\n   geom_bar(stat = \"identity\") +\n   labs(title = \"Proportionality of Race\",\n        x = \"Race\",\n        y = \"Proportion\") +\n   theme_gray() +\n   scale_y_continuous(labels = scales::percent) +\n   theme(legend.position = \"none\",\n         axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Blog-Post-5_files/figure-html/t3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n gender_columns <- c(\"MT10\", \"FT10\")\n\n employment_2022[gender_columns] <- lapply(employment_2022[gender_columns], function(x) as.numeric(x))\n\n employment_2022[gender_columns] <-\n   lapply(employment_2022[gender_columns], function(x) replace_na(x, 0))\n\n total_gender_counts <- colSums(employment_2022[gender_columns], na.rm = TRUE)\n\n gender_proportion_df <- data.frame(Gender = names(total_gender_counts), Count = total_gender_counts)\n\n gender_proportion_df$Gender <- recode(gender_proportion_df$Gender,\n   MT10 = \"Male\", FT10 = \"Female\")\n\n gender_proportion_df <- gender_proportion_df %>%\n   mutate(Proportion = Count / sum(Count),\n          Percentage = Proportion * 100)\n\n ggplot(gender_proportion_df, aes(x = \"\", y = Proportion, fill = Gender)) +\n   geom_bar(stat = \"identity\", width = 1) +\n   coord_polar(\"y\") +\n   labs(title = \"Proportionality of Gender\",\n        fill = \"Gender\") +\n   theme_gray() +\n   theme(axis.title.x = element_blank(),\n         axis.title.y = element_blank(),\n         axis.ticks = element_blank(),\n         axis.text = element_blank()) +\n   geom_text(aes(label = paste0(round(Percentage, 1), \"%\")),\n             position = position_stack(vjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Blog-Post-5_files/figure-html/t4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n library(dplyr)\n library(tidyselect)\n\n employment_2022 <- readRDS(\"dataset/EEO1_2022_PUF.rds\")\n\n employment_2022 <- employment_2022 %>%\n   rename_with(toupper)\n\n cleaned_2022 <- employment_2022 %>%\n   select(\n     NATION, REGION, DIVISION, STATE, CBSA, COUNTY, NAICS2, NAICS2_NAME, NAICS3, NAICS3_NAME, ESTABLISHMENTS,\n     matches(\"^(WHT|BLKT|HISPT|ASIANT|AIANT|NHOPIT|TOMRT|MT|FT)[1-9](_2)?$\")\n   )\n\n if (!dir.exists(\"../ma-4615-fa24-final-project-group-5/dataset\")) {\n   dir.create(\"../ma-4615-fa24-final-project-group-5/dataset\", recursive = TRUE)\n }\n\n saveRDS(cleaned_2022, \"../ma-4615-fa24-final-project-group-5/dataset/Cleaned_Employment2022.rds\")\n cleaned_2022_dataset <- readRDS(\"dataset/Cleaned_Employment2022.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n library(dplyr)\n library(ggplot2)\n library(tidyr)\n\n # Read the cleaned data\n cleaned_2022 <- readRDS(\"../ma-4615-fa24-final-project-group-5/dataset/Cleaned_Employment2022.rds\")\n\n long_data_race <- cleaned_2022 %>%\n   pivot_longer(\n     cols = matches(\"^(WHT|BLKT|HISPT|ASIANT|AIANT|NHOPIT|TOMRT)([1-9]|1_2)?$\"),\n     names_to = c(\"Race\", \"JobType\"),\n     names_pattern = \"^(WHT|BLKT|HISPT|ASIANT|AIANT|NHOPIT|TOMRT)([1-9]|1_2)?$\",\n     values_to = \"Count\"\n   ) %>%\n   filter(!is.na(JobType) & !is.na(Race))\n\n valid_job_types <- c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"1_2\")\n filtered_data_race <- long_data_race %>%\n   filter(JobType %in% valid_job_types) %>%\n   mutate(\n     Count = gsub(\"[^0-9.-]\", \"\", Count), \n     Count = as.numeric(Count),            \n     Count = ifelse(is.na(Count), 0, Count) \n   )\n\n filtered_data_race <- filtered_data_race %>%\n   mutate(\n     JobTypeLabel = recode(JobType,\n       \"1\" = \"Senior Off and Managers\",\n       \"2\" = \"Professionals\",\n       \"3\" = \"Technicians\",\n       \"4\" = \"Sales Workers\",\n       \"5\" = \"Clericals\",\n       \"6\" = \"Craft\",\n       \"7\" = \"Operatives\",\n       \"8\" = \"Laborers\",\n       \"9\" = \"Services\",\n       \"1_2\" = \"Mid Off and Managers\"\n     ),\n     JobTypeLabel = factor(JobTypeLabel, levels = c(\n       \"Senior Off and Managers\", \"Professionals\", \"Technicians\",\n       \"Sales Workers\", \"Clericals\", \"Craft\", \"Operatives\", \"Laborers\", \"Services\",\n       \"Mid Off and Managers\"\n     ))\n   )\n\n ggplot(filtered_data_race, aes(x = Race, y = Count, fill = Race)) +\n   geom_bar(stat = \"identity\") +\n   facet_wrap(~ JobTypeLabel, scales = \"free_y\") +  \n   theme_gray() +\n   labs(\n     title = \"Proportional Representation by Job Type and Race (2022)\",\n     x = \"Race\",\n     y = \"Count\"\n   ) +\n   scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +\n   theme(\n     legend.position = \"none\",\n     strip.text = element_text(size = 10, face = \"bold\"),\n     axis.text.x = element_text(angle = 45, hjust = 1),\n     axis.text.y = element_text(size = 8)\n   )\n```\n\n::: {.cell-output-display}\n![](Blog-Post-5_files/figure-html/t6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_data_gender <- cleaned_2022 %>%\n   pivot_longer(\n     cols = matches(\"^(MT|FT)([1-9]|1_2)?$\"),\n     names_to = c(\"Gender\", \"JobType\"),\n     names_pattern = \"^(MT|FT)([1-9]|1_2)?$\",\n     values_to = \"Count\"\n   ) %>%\n   filter(!is.na(JobType) & !is.na(Gender))\n\n long_data_gender <- long_data_gender %>%\n   mutate(\n     Count = as.numeric(Count),             \n     Count = ifelse(is.na(Count), 0, Count)  \n   )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Count = as.numeric(Count)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n filtered_data_gender <- long_data_gender %>%\n   filter(JobType %in% valid_job_types) %>%\n   group_by(JobType) %>%\n   mutate(\n     Total = sum(Count, na.rm = TRUE),  \n     Percent = (Count / Total) * 100      \n   ) %>%\n   ungroup()\n\n filtered_data_gender <- filtered_data_gender %>%\n   mutate(\n     JobTypeLabel = recode(JobType,\n       \"1\" = \"Senior Off and Managers\",\n       \"2\" = \"Professionals\",\n       \"3\" = \"Technicians\",\n       \"4\" = \"Sales Workers\",\n       \"5\" = \"Clericals\",\n       \"6\" = \"Craft\",\n       \"7\" = \"Operatives\",\n       \"8\" = \"Laborers\",\n       \"9\" = \"Services\",\n       \"1_2\" = \"Mid Off and Managers\"\n     ),\n     JobTypeLabel = factor(JobTypeLabel, levels = c(\n       \"Senior Off and Managers\", \"Professionals\", \"Technicians\",\n       \"Sales Workers\", \"Clericals\", \"Craft\", \"Operatives\", \"Laborers\", \"Services\", \"Mid Off and Managers\"\n     ))\n   )\n\n ggplot(filtered_data_gender, aes(x = Gender, y = Percent, fill = Gender)) +\n   geom_bar(stat = \"identity\") +\n   facet_wrap(~ JobTypeLabel, scales = \"free_y\") +\n   theme_gray() +\n   labs(\n     title = \"Proportional Representation by Job Type and Gender (2022)\",\n     x = \"Gender\",\n     y = \"Percentage\"\n   ) +\n   theme(\n     legend.position = \"none\",              \n     strip.text = element_text(size = 10, face = \"bold\"),\n     axis.text.x = element_text(angle = 45, hjust = 1),\n     axis.text.y = element_text(size = 8)\n   )\n```\n\n::: {.cell-output-display}\n![](Blog-Post-5_files/figure-html/t7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "Blog-Post-5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}