{
  "hash": "a7f93a84f99d1be722a9e45b59453a02",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog Post 6\"\nauthor: \"Group 5\" \ndate: \"2024-11-18\"\ndate-modified: \"2024-11-18\"\ndraft: FALSE\n---\n\n\n\nThis week, we cleaned and loaded a dataset closely associated with our employment statistics with racial breakdowns. This new dataset contains many of the NAICS job codes contained in our original dataset, and matched them with wages statistics from the past couple months. For the purposes of our analysis this week, I've only looked at the October 2023 data.\n\nProcessing the data took rather extensive cleanup, requiring a conversion of the Department of Labor's table into a CSV file, which we did by writing a python HTML web parsing script that could read in the values to a workable CSV file. Then, it was a matter of matching the data, linked by their NAICS codes, to our existing datasets. Once this was accomplished, we were able to perform some rudimentary analysis, seeing some quick breakdowns of wage statistics by the various job categories.\n\nFor future weeks, we would like to see how this data by job category varies for race and gender, incorporating the other timestamps for average wages to see if wages across jobs and race and gender have changed over time. From this, we might be able to discover things like whether or not wage increases are equally distributed, and how they compare against inflation in the same time period.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load in our wage data!\n\nwage_data <- read.csv(\"dataset/wage_data.csv\")\n\n# Preview the dataset\nsaveRDS(wage_data, file = \"dataset/wage_data.rds\")\nhead(wage_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Industry X2022.NAICS.code Oct..2023\n1                                       Logging(1)             1133     31.20\n2 Mining, quarrying, and oil and gas extraction(1)               21     39.19\n3                        Oil and gas extraction(1)              211     49.38\n4                   Mining (except oil and gas)(1)              212     35.75\n5                                   Coal mining(1)             2121     38.80\n6                              Metal ore mining(1)             2122     43.23\n  Aug..2024 Sept..2024.p. Oct..2024.p. Oct..2023_2 Aug..2024_2 Sept..2024.p._2\n1     31.21         31.58            0     1347.84     1367.00         1332.68\n2     40.23         40.39            0     1755.71     1798.28         1809.47\n3     47.92         47.94            0     2044.33     2046.18         2042.24\n4     37.25         37.30            0     1583.73     1665.08         1671.04\n5     41.86         42.03            0     1843.00     1933.93         1950.19\n6     43.80         43.87            0     1794.05     1870.26         1855.70\n  Oct..2024.p._2\n1              0\n2              0\n3              0\n4              0\n5              0\n6              0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Load the datasets\nCleaned_Employment2017 <- readRDS(\"dataset/Employment2017.rds\")\nwage_data <- readRDS(\"dataset/wage_data.rds\")\n\n# Step 2: Ensure column names are consistent\n# Rename columns if necessary for easier comparison\ncolnames(wage_data) <- gsub(\"\\\\.\", \"\", colnames(wage_data)) # Remove periods if they exist in column names\n\n# Step 3: Match NAICS codes and merge datasets\n# Match Cleaned_Employment2017$NAICS3 with wage_data$X2022NAICScode\nCleaned_Employment2017$`Oct2023 wages` <- ifelse(\n  Cleaned_Employment2017$NAICS3 %in% wage_data$X2022NAICScode,\n  wage_data$Oct2023[match(Cleaned_Employment2017$NAICS3, wage_data$X2022NAICScode)],\n  NA\n)\n\n# Step 4: Save the updated dataset\n#saveRDS(Cleaned_Employment2017, \"dataset/Updated_Cleaned_Employment2017.rds\")\n\ndata2017WithWages <- Cleaned_Employment2017[!is.na(Cleaned_Employment2017$`Oct2023 wages`), ]\n\n# Step 5: Save the new table\nsaveRDS(data2017WithWages, \"dataset/2017WithWages.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n# Subset relevant columns\ncols <- grep(\"^(WHT|BLKT|HISPT|ASIANT|AIANT|NHOPIT|TOMRT)(10)?$\", names(data2017WithWages), value = TRUE)\ndata2017WithWages[cols] <- lapply(data2017WithWages[cols], function(col) as.numeric(as.character(col)))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create the new dataset with selected columns\nnew_data <- data2017WithWages %>%\n  select(NAICS2_Name, NAICS2, `Oct2023 wages`, all_of(cols))\n\n# Aggregate the data\naggregated_data <- new_data %>%\n  group_by(NAICS2_Name) %>%\n  summarize(\n    Avg_Wage = mean(`Oct2023 wages`, na.rm = TRUE),\n    across(all_of(cols), sum, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `summarize()`.\nℹ In argument: `across(all_of(cols), sum, na.rm = TRUE)`.\nℹ In group 1: `NAICS2_Name = \"Accommodation and Food Services\"`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load ggplot2 for visualization\nlibrary(ggplot2)\naggregated_data$NAICS2_Name <- factor(aggregated_data$NAICS2_Name, levels = unique(aggregated_data$NAICS2_Name))\n# Create the bar chart\nggplot(aggregated_data, aes(x = reorder(NAICS2_Name, Avg_Wage), y = Avg_Wage)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +  # Flip coordinates for better readability\n  labs(\n    title = \"Average Wages by NAICS2_Name\",\n    x = \"NAICS2_Name\",\n    y = \"Average Wage (Oct 2023)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aggregate the data by NAICS3_Name\naggregated_data_naics3 <- data2017WithWages %>%\n  select(NAICS3_Name, NAICS2, `Oct2023 wages`, all_of(cols)) %>%\n  group_by(NAICS3_Name) %>%\n  summarize(\n    Avg_Wage = mean(`Oct2023 wages`, na.rm = TRUE),  # Average wages\n    across(all_of(cols), sum, na.rm = TRUE)          # Sum racial category columns\n  )\n\n\n# Convert NAICS3_Name to a factor to ensure all are displayed\naggregated_data_naics3$NAICS3_Name <- factor(aggregated_data_naics3$NAICS3_Name, levels = unique(aggregated_data_naics3$NAICS3_Name))\n\n# Create the bar chart\nggplot(aggregated_data_naics3, aes(x = reorder(NAICS3_Name, Avg_Wage), y = Avg_Wage)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +  # Flip coordinates for better readability\n  labs(\n    title = \"Average Wages by NAICS3_Name\",\n    x = \"NAICS3_Name\",\n    y = \"Average Wage (Oct 2023)\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8)  # Adjust text size for clarity\n  )\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\n\n# Load datasets\nemployment_data <- read.csv(\"dataset/Employment2017.csv\")\nwage_data <- read.csv(\"dataset/wage_data.csv\")\n\n# Extract and format 3-digit NAICS codes from both datasets\nwage_data <- wage_data %>%\n  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))\n\nemployment_data <- employment_data %>%\n  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))\n\n# Identify matching 3-digit NAICS codes\nmatching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)\n\n# Print the matching 3-digit NAICS codes\ncat(\"Matching 3-digit NAICS codes:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMatching 3-digit NAICS codes:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(matching_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"113\" \"211\" \"212\" \"213\" \"236\" \"237\" \"238\" \"321\" \"327\" \"331\" \"332\" \"333\"\n[13] \"334\" \"335\" \"336\" \"337\" \"339\" \"311\" \"322\" \"325\" \"326\" \"423\" \"424\" \"425\"\n[25] \"441\" \"444\" \"445\" \"481\" \"484\" \"485\" \"488\" \"492\" \"493\" \"221\" \"512\" \"517\"\n[37] \"518\" \"519\" \"522\" \"523\" \"524\" \"531\" \"532\" \"541\" \"551\" \"561\" \"562\" \"621\"\n[49] \"622\" \"623\" \"624\" \"711\" \"712\" \"713\" \"721\" \"722\" \"811\" \"812\" \"813\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Print the values in the column Aug. 2024 for matching NAICS codes (keep only the first occurrence)\ncat(\"\\nAug. 2024 values for matching NAICS codes (first occurrence only):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAug. 2024 values for matching NAICS codes (first occurrence only):\n```\n\n\n:::\n\n```{.r .cell-code}\naug_2024_values <- wage_data %>%\n  filter(NAICS3 %in% matching_codes) %>%\n  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3\n  select(NAICS3, Aug..2024)\nprint(aug_2024_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   NAICS3 Aug..2024\n1     113     31.21\n2     211     47.92\n3     212     37.25\n4     213     39.09\n5     236     41.44\n6     237     39.84\n7     238     36.93\n8     321     27.59\n9     327     32.36\n10    331     34.32\n11    332     28.46\n12    333     35.54\n13    334     41.91\n14    335     37.00\n15    336     34.63\n16    337     26.83\n17    339     35.06\n18    311     27.00\n19    322     31.82\n20    325     43.39\n21    326     29.16\n22    423     38.30\n23    424     35.23\n24    425     45.50\n25    441     30.94\n26    444     22.67\n27    445     21.68\n28    481     46.65\n29    484     31.31\n30    485     28.31\n31    488     34.19\n32    492     24.99\n33    493     24.90\n34    221     53.66\n35    512     40.16\n36    517     43.54\n37    518     56.07\n38    519     42.14\n39    522     47.30\n40    523     70.37\n41    524     45.41\n42    531     34.68\n43    532     31.57\n44    541     60.01\n45    551     48.63\n46    561     27.74\n47    562     35.70\n48    621     39.04\n49    622     42.68\n50    623     25.46\n51    624     22.77\n52    711     39.15\n53    712     30.02\n54    713     24.07\n55    721     23.73\n56    722     20.63\n57    811     30.45\n58    812     24.02\n59    813     36.18\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\n\n# Load datasets\nemployment_data <- read.csv(\"dataset/Employment2017.csv\")\nwage_data <- read.csv(\"dataset/wage_data.csv\")\n\n# Extract and format 3-digit NAICS codes from both datasets\nwage_data <- wage_data %>%\n  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))\n\nemployment_data <- employment_data %>%\n  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))\n\n# Identify matching 3-digit NAICS codes\nmatching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)\n\n# Print the matching 3-digit NAICS codes\ncat(\"Matching 3-digit NAICS codes:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMatching 3-digit NAICS codes:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(matching_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"113\" \"211\" \"212\" \"213\" \"236\" \"237\" \"238\" \"321\" \"327\" \"331\" \"332\" \"333\"\n[13] \"334\" \"335\" \"336\" \"337\" \"339\" \"311\" \"322\" \"325\" \"326\" \"423\" \"424\" \"425\"\n[25] \"441\" \"444\" \"445\" \"481\" \"484\" \"485\" \"488\" \"492\" \"493\" \"221\" \"512\" \"517\"\n[37] \"518\" \"519\" \"522\" \"523\" \"524\" \"531\" \"532\" \"541\" \"551\" \"561\" \"562\" \"621\"\n[49] \"622\" \"623\" \"624\" \"711\" \"712\" \"713\" \"721\" \"722\" \"811\" \"812\" \"813\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter Aug. 2024 values for matching NAICS codes (keep only the first occurrence)\naug_2024_values <- wage_data %>%\n  filter(NAICS3 %in% matching_codes) %>%\n  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3\n  select(NAICS3, Aug..2024)\n\n# Merge Aug. 2024 wages with employment data to get racial distribution\nmerged_data <- aug_2024_values %>%\n  left_join(employment_data, by = \"NAICS3\") %>%\n  select(NAICS3, Aug..2024, WHT10, BLKT10, HISPT10, ASIANT10, AIANT10, NHOPIT10, TOMRT10) %>%\n  gather(key = \"Race\", value = \"Percentage\", WHT10:TOMRT10) %>%\n  mutate(Percentage = as.numeric(as.character(Percentage))) %>%\n  filter(!is.na(Percentage))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Percentage = as.numeric(as.character(Percentage))`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# Sort data by wages in descending order\nsorted_data <- aug_2024_values %>%\n  arrange(desc(Aug..2024))\n\n# Generate charts for each industry, sorted by wages\nfor (i in 1:nrow(sorted_data)) {\n  naics_code <- sorted_data$NAICS3[i]\n  wage <- sorted_data$Aug..2024[i]\n  plot_data <- merged_data %>%\n    filter(NAICS3 == naics_code)\n  \n  # Create the chart\n  plot <- ggplot(plot_data, aes(x = Race, y = Percentage, fill = Race)) +\n    geom_bar(stat = \"identity\") +\n    labs(\n      title = paste0(\"NAICS: \", naics_code, \" | Wage: $\", round(wage, 2)),\n      x = \"Race\",\n      y = \"Percentage\",\n      fill = \"Race\"\n    ) +\n    theme_minimal() +\n    theme(\n      axis.text.x = element_text(angle = 45, hjust = 1)\n    )\n  \n  # Print the chart\n  print(plot)\n}\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-20.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-21.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-22.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-23.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-24.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-25.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-26.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-27.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-28.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-29.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-30.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-31.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-32.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-33.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-34.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-35.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-36.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-37.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-38.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-39.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-40.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-41.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-42.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-43.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-44.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-45.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-46.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-47.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-48.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-49.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-50.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-51.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-52.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-53.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-54.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-55.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-56.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-57.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-58.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p7-59.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\n\n# Load datasets\nemployment_data <- read.csv(\"dataset/Employment2017.csv\")\nwage_data <- read.csv(\"dataset/wage_data.csv\")\n\n# Extract and format 3-digit NAICS codes from both datasets\nwage_data <- wage_data %>%\n  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))\n\nemployment_data <- employment_data %>%\n  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))\n\n# Identify matching 3-digit NAICS codes\nmatching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)\n\n# Print the matching 3-digit NAICS codes\ncat(\"Matching 3-digit NAICS codes:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMatching 3-digit NAICS codes:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(matching_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"113\" \"211\" \"212\" \"213\" \"236\" \"237\" \"238\" \"321\" \"327\" \"331\" \"332\" \"333\"\n[13] \"334\" \"335\" \"336\" \"337\" \"339\" \"311\" \"322\" \"325\" \"326\" \"423\" \"424\" \"425\"\n[25] \"441\" \"444\" \"445\" \"481\" \"484\" \"485\" \"488\" \"492\" \"493\" \"221\" \"512\" \"517\"\n[37] \"518\" \"519\" \"522\" \"523\" \"524\" \"531\" \"532\" \"541\" \"551\" \"561\" \"562\" \"621\"\n[49] \"622\" \"623\" \"624\" \"711\" \"712\" \"713\" \"721\" \"722\" \"811\" \"812\" \"813\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter Aug. 2024 values for matching NAICS codes (keep only the first occurrence)\naug_2024_values <- wage_data %>%\n  filter(NAICS3 %in% matching_codes) %>%\n  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3\n  select(NAICS3, Aug..2024)\n\n# Merge Aug. 2024 wages with employment data to get racial distribution\nmerged_data <- aug_2024_values %>%\n  left_join(employment_data, by = \"NAICS3\") %>%\n  select(NAICS3, Aug..2024, WHT10, BLKT10, HISPT10, ASIANT10, AIANT10, NHOPIT10, TOMRT10) %>%\n  gather(key = \"Race\", value = \"Percentage\", WHT10:TOMRT10) %>%\n  mutate(Percentage = as.numeric(as.character(Percentage))) %>%\n  filter(!is.na(Percentage))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Percentage = as.numeric(as.character(Percentage))`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# Sort data by wages in descending order\nsorted_data <- aug_2024_values %>%\n  arrange(desc(Aug..2024))\n\n# Generate charts for each industry, sorted by wages\nfor (i in 1:nrow(sorted_data)) {\n  naics_code <- sorted_data$NAICS3[i]\n  wage <- sorted_data$Aug..2024[i]\n  plot_data <- merged_data %>%\n    filter(NAICS3 == naics_code)\n  \n  # Create the chart\n  plot <- ggplot(plot_data, aes(x = Race, y = Percentage, fill = Race)) +\n    geom_bar(stat = \"identity\") +\n    labs(\n      title = paste0(\"NAICS: \", naics_code, \" | Wage: $\", round(wage, 2)),\n      x = \"Race\",\n      y = \"Percentage\",\n      fill = \"Race\"\n    ) +\n    theme_minimal() +\n    theme(\n      axis.text.x = element_text(angle = 45, hjust = 1)\n    )\n  \n  # Print the chart\n  print(plot)\n}\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-20.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-21.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-22.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-23.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-24.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-25.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-26.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-27.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-28.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-29.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-30.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-31.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-32.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-33.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-34.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-35.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-36.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-37.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-38.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-39.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-40.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-41.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-42.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-43.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-44.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-45.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-46.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-47.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-48.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-49.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-50.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-51.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-52.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-53.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-54.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-55.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-56.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-57.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-58.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-59.png){width=672}\n:::\n\n```{.r .cell-code}\n# Create charts for each race showing their proportion as wages decrease\nrace_proportions <- merged_data %>%\n  group_by(Aug..2024, Race) %>%\n  summarize(Total_Percentage = sum(Percentage, na.rm = TRUE)) %>%\n  ungroup() %>%\n  arrange(desc(Aug..2024))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Aug..2024'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Generate a line plot for each race\nrace_plot <- ggplot(race_proportions, aes(x = Aug..2024, y = Total_Percentage, color = Race)) +\n  geom_line(size = 1) +\n  geom_point() +\n  labs(\n    title = \"Racial Proportions as Wages Decrease\",\n    x = \"Wages (Aug. 2024)\",\n    y = \"Total Percentage\",\n    color = \"Race\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Print the race proportion plot\nprint(race_plot)\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/p8-60.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\n\n# Load datasets\nemployment_data <- read.csv(\"dataset/Employment2017.csv\")\nwage_data <- read.csv(\"dataset/wage_data.csv\")\n\n# Extract and format 3-digit NAICS codes from both datasets\nwage_data <- wage_data %>%\n  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))\n\nemployment_data <- employment_data %>%\n  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))\n\n# Identify matching 3-digit NAICS codes\nmatching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)\n\n# Print the matching 3-digit NAICS codes\ncat(\"Matching 3-digit NAICS codes:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMatching 3-digit NAICS codes:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(matching_codes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"113\" \"211\" \"212\" \"213\" \"236\" \"237\" \"238\" \"321\" \"327\" \"331\" \"332\" \"333\"\n[13] \"334\" \"335\" \"336\" \"337\" \"339\" \"311\" \"322\" \"325\" \"326\" \"423\" \"424\" \"425\"\n[25] \"441\" \"444\" \"445\" \"481\" \"484\" \"485\" \"488\" \"492\" \"493\" \"221\" \"512\" \"517\"\n[37] \"518\" \"519\" \"522\" \"523\" \"524\" \"531\" \"532\" \"541\" \"551\" \"561\" \"562\" \"621\"\n[49] \"622\" \"623\" \"624\" \"711\" \"712\" \"713\" \"721\" \"722\" \"811\" \"812\" \"813\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter Aug. 2024 values for matching NAICS codes (keep only the first occurrence)\naug_2024_values <- wage_data %>%\n  filter(NAICS3 %in% matching_codes) %>%\n  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3\n  select(NAICS3, Aug..2024)\n\n# Merge Aug. 2024 wages with employment data to get racial distribution\nmerged_data <- aug_2024_values %>%\n  left_join(employment_data, by = \"NAICS3\") %>%\n  select(NAICS3, Aug..2024, WHT10, BLKT10, HISPT10, ASIANT10, AIANT10, NHOPIT10, TOMRT10) %>%\n  gather(key = \"Race\", value = \"Percentage\", WHT10:TOMRT10) %>%\n  mutate(Percentage = as.numeric(as.character(Percentage))) %>%\n  filter(!is.na(Percentage))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Percentage = as.numeric(as.character(Percentage))`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# Sort data by wages in descending order\nsorted_data <- aug_2024_values %>%\n  arrange(desc(Aug..2024))\n\n# Generate charts for each industry, sorted by wages\nfor (i in 1:nrow(sorted_data)) {\n  naics_code <- sorted_data$NAICS3[i]\n  wage <- sorted_data$Aug..2024[i]\n  plot_data <- merged_data %>%\n    filter(NAICS3 == naics_code)\n  \n  # Create the chart\n  plot <- ggplot(plot_data, aes(x = Race, y = Percentage, fill = Race)) +\n    geom_bar(stat = \"identity\") +\n    labs(\n      title = paste0(\"NAICS: \", naics_code, \" | Wage: $\", round(wage, 2)),\n      x = \"Race\",\n      y = \"Percentage\",\n      fill = \"Race\"\n    ) +\n    theme_minimal() +\n    theme(\n      axis.text.x = element_text(angle = 45, hjust = 1)\n    )\n  \n  # Print the chart\n  print(plot)\n}\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-20.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-21.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-22.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-23.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-24.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-25.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-26.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-27.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-28.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-29.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-30.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-31.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-32.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-33.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-34.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-35.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-36.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-37.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-38.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-39.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-40.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-41.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-42.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-43.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-44.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-45.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-46.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-47.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-48.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-49.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-50.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-51.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-52.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-53.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-54.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-55.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-56.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-57.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-58.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-59.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate the mean percentage across all races\nmean_percentage <- merged_data %>%\n  group_by(Race) %>%\n  summarize(Mean_Percentage = mean(Percentage, na.rm = TRUE))\n\n# Merge mean percentage back into the data to calculate the difference from the mean\nrace_diff <- merged_data %>%\n  left_join(mean_percentage, by = \"Race\") %>%\n  mutate(Diff_From_Mean = Percentage - Mean_Percentage) %>%\n  group_by(Aug..2024, Race) %>%\n  summarize(Diff_From_Mean = mean(Diff_From_Mean, na.rm = TRUE)) %>%\n  ungroup() %>%\n  arrange(desc(Aug..2024)) %>%\n  filter(abs(Diff_From_Mean) <= 10000)  # Remove outliers where difference exceeds 10,000\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Aug..2024'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Generate a line plot for each race showing the difference from the mean as wages decrease\ndiff_plot <- ggplot(race_diff, aes(x = Aug..2024, y = Diff_From_Mean, color = Race)) +\n  geom_line(size = 1) +\n  geom_point() +\n  labs(\n    title = \"Difference from Mean Racial Representation as a Function of Wage\",\n    x = \"Wages (Aug. 2024)\",\n    y = \"Difference from Mean (%)\",\n    color = \"Race\"\n  ) +\n  theme_minimal()\n\n# Print the difference plot\nprint(diff_plot)\n```\n\n::: {.cell-output-display}\n![](Blog-Post-6_files/figure-html/unnamed-chunk-1-60.png){width=672}\n:::\n:::",
    "supporting": [
      "Blog-Post-6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}