---
title: "Blog Post 6"
author: "Group 5" 
date: "2024-11-18"
date-modified: "2024-11-18"
draft: FALSE
---

This week, we cleaned and loaded a dataset closely associated with our employment statistics with racial breakdowns. This new dataset contains many of the NAICS job codes contained in our original dataset, and matched them with wages statistics from the past couple months. For the purposes of our analysis this week, I've only looked at the October 2023 data.

Processing the data took rather extensive cleanup, requiring a conversion of the Department of Labor's table into a CSV file, which we did by writing a python HTML web parsing script that could read in the values to a workable CSV file. Then, it was a matter of matching the data, linked by their NAICS codes, to our existing datasets. Once this was accomplished, we were able to perform some rudimentary analysis, seeing some quick breakdowns of wage statistics by the various job categories.

For future weeks, we would like to see how this data by job category varies for race and gender, incorporating the other timestamps for average wages to see if wages across jobs and race and gender have changed over time. From this, we might be able to discover things like whether or not wage increases are equally distributed, and how they compare against inflation in the same time period.



```{r p1}
#load in our wage data!

wage_data <- read.csv("dataset/wage_data.csv")

# Preview the dataset
saveRDS(wage_data, file = "dataset/wage_data.rds")
head(wage_data)
```


```{r p2}
#colnames(wage_data)
#print(wage_data)
```

```{r p3}
# Step 1: Load the datasets
Cleaned_Employment2017 <- readRDS("dataset/Employment2017.rds")
wage_data <- readRDS("dataset/wage_data.rds")

# Step 2: Ensure column names are consistent
# Rename columns if necessary for easier comparison
colnames(wage_data) <- gsub("\\.", "", colnames(wage_data)) # Remove periods if they exist in column names

# Step 3: Match NAICS codes and merge datasets
# Match Cleaned_Employment2017$NAICS3 with wage_data$X2022NAICScode
Cleaned_Employment2017$`Oct2023 wages` <- ifelse(
  Cleaned_Employment2017$NAICS3 %in% wage_data$X2022NAICScode,
  wage_data$Oct2023[match(Cleaned_Employment2017$NAICS3, wage_data$X2022NAICScode)],
  NA
)

# Step 4: Save the updated dataset
#saveRDS(Cleaned_Employment2017, "dataset/Updated_Cleaned_Employment2017.rds")

# Optional: Preview the updated dataset
#print(Cleaned_Employment2017)

data2017WithWages <- Cleaned_Employment2017[!is.na(Cleaned_Employment2017$`Oct2023 wages`), ]

# Step 5: Save the new table
saveRDS(data2017WithWages, "dataset/2017WithWages.rds")

# Optional: Preview the filtered table
#print(data2017WithWages)
```



```{r p4}
# Load necessary libraries
library(dplyr)

# Subset relevant columns
cols <- grep("^(WHT|BLKT|HISPT|ASIANT|AIANT|NHOPIT|TOMRT)(10)?$", names(data2017WithWages), value = TRUE)
data2017WithWages[cols] <- lapply(data2017WithWages[cols], function(col) as.numeric(as.character(col)))
# Create the new dataset with selected columns
new_data <- data2017WithWages %>%
  select(NAICS2_Name, NAICS2, `Oct2023 wages`, all_of(cols))

# Aggregate the data
aggregated_data <- new_data %>%
  group_by(NAICS2_Name) %>%
  summarize(
    Avg_Wage = mean(`Oct2023 wages`, na.rm = TRUE),
    across(all_of(cols), sum, na.rm = TRUE)
  )

# Load ggplot2 for visualization
library(ggplot2)
aggregated_data$NAICS2_Name <- factor(aggregated_data$NAICS2_Name, levels = unique(aggregated_data$NAICS2_Name))
# Create the bar chart
ggplot(aggregated_data, aes(x = reorder(NAICS2_Name, Avg_Wage), y = Avg_Wage)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip coordinates for better readability
  labs(
    title = "Average Wages by NAICS2_Name",
    x = "NAICS2_Name",
    y = "Average Wage (Oct 2023)"
  ) +
  theme_minimal()
```

```{r p5}
# Aggregate the data by NAICS3_Name
aggregated_data_naics3 <- data2017WithWages %>%
  select(NAICS3_Name, NAICS2, `Oct2023 wages`, all_of(cols)) %>%
  group_by(NAICS3_Name) %>%
  summarize(
    Avg_Wage = mean(`Oct2023 wages`, na.rm = TRUE),  # Average wages
    across(all_of(cols), sum, na.rm = TRUE)          # Sum racial category columns
  )


# Convert NAICS3_Name to a factor to ensure all are displayed
aggregated_data_naics3$NAICS3_Name <- factor(aggregated_data_naics3$NAICS3_Name, levels = unique(aggregated_data_naics3$NAICS3_Name))

# Create the bar chart
ggplot(aggregated_data_naics3, aes(x = reorder(NAICS3_Name, Avg_Wage), y = Avg_Wage)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip coordinates for better readability
  labs(
    title = "Average Wages by NAICS3_Name",
    x = "NAICS3_Name",
    y = "Average Wage (Oct 2023)"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 8)  # Adjust text size for clarity
  )
```

