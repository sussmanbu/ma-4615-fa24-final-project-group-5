---
title: "Blog Post 6"
author: "Group 5" 
date: "2024-11-18"
date-modified: "2024-11-18"
draft: FALSE
---

This week, we cleaned and loaded a dataset closely associated with our employment statistics with racial breakdowns. This new dataset contains many of the NAICS job codes contained in our original dataset, and matched them with wages statistics from the past couple months. For the purposes of our analysis this week, I've only looked at the October 2023 data.

Processing the data took rather extensive cleanup, requiring a conversion of the Department of Labor's table into a CSV file, which we did by writing a python HTML web parsing script that could read in the values to a workable CSV file. Then, it was a matter of matching the data, linked by their NAICS codes, to our existing datasets. Once this was accomplished, we were able to perform some rudimentary analysis, seeing some quick breakdowns of wage statistics by the various job categories.

For future weeks, we would like to see how this data by job category varies for race and gender, incorporating the other timestamps for average wages to see if wages across jobs and race and gender have changed over time. From this, we might be able to discover things like whether or not wage increases are equally distributed, and how they compare against inflation in the same time period.



```{r p1}
#load in our wage data!

wage_data <- read.csv("dataset/wage_data.csv")

# Preview the dataset
saveRDS(wage_data, file = "dataset/wage_data.rds")
head(wage_data)
```


```{r p3}
# Step 1: Load the datasets
Cleaned_Employment2017 <- readRDS("dataset/Employment2017.rds")
wage_data <- readRDS("dataset/wage_data.rds")

# Step 2: Ensure column names are consistent
# Rename columns if necessary for easier comparison
colnames(wage_data) <- gsub("\\.", "", colnames(wage_data)) # Remove periods if they exist in column names

# Step 3: Match NAICS codes and merge datasets
# Match Cleaned_Employment2017$NAICS3 with wage_data$X2022NAICScode
Cleaned_Employment2017$`Oct2023 wages` <- ifelse(
  Cleaned_Employment2017$NAICS3 %in% wage_data$X2022NAICScode,
  wage_data$Oct2023[match(Cleaned_Employment2017$NAICS3, wage_data$X2022NAICScode)],
  NA
)

# Step 4: Save the updated dataset
#saveRDS(Cleaned_Employment2017, "dataset/Updated_Cleaned_Employment2017.rds")

data2017WithWages <- Cleaned_Employment2017[!is.na(Cleaned_Employment2017$`Oct2023 wages`), ]

# Step 5: Save the new table
saveRDS(data2017WithWages, "dataset/2017WithWages.rds")
```



```{r p4}
# Load necessary libraries
library(dplyr)

# Subset relevant columns
cols <- grep("^(WHT|BLKT|HISPT|ASIANT|AIANT|NHOPIT|TOMRT)(10)?$", names(data2017WithWages), value = TRUE)
data2017WithWages[cols] <- lapply(data2017WithWages[cols], function(col) as.numeric(as.character(col)))
# Create the new dataset with selected columns
new_data <- data2017WithWages %>%
  select(NAICS2_Name, NAICS2, `Oct2023 wages`, all_of(cols))

# Aggregate the data
aggregated_data <- new_data %>%
  group_by(NAICS2_Name) %>%
  summarize(
    Avg_Wage = mean(`Oct2023 wages`, na.rm = TRUE),
    across(all_of(cols), sum, na.rm = TRUE)
  )

# Load ggplot2 for visualization
library(ggplot2)
aggregated_data$NAICS2_Name <- factor(aggregated_data$NAICS2_Name, levels = unique(aggregated_data$NAICS2_Name))
# Create the bar chart
ggplot(aggregated_data, aes(x = reorder(NAICS2_Name, Avg_Wage), y = Avg_Wage)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip coordinates for better readability
  labs(
    title = "Average Wages by NAICS2_Name",
    x = "NAICS2_Name",
    y = "Average Wage (Oct 2023)"
  ) +
  theme_minimal()
```

```{r p5}
# Aggregate the data by NAICS3_Name
aggregated_data_naics3 <- data2017WithWages %>%
  select(NAICS3_Name, NAICS2, `Oct2023 wages`, all_of(cols)) %>%
  group_by(NAICS3_Name) %>%
  summarize(
    Avg_Wage = mean(`Oct2023 wages`, na.rm = TRUE),  # Average wages
    across(all_of(cols), sum, na.rm = TRUE)          # Sum racial category columns
  )


# Convert NAICS3_Name to a factor to ensure all are displayed
aggregated_data_naics3$NAICS3_Name <- factor(aggregated_data_naics3$NAICS3_Name, levels = unique(aggregated_data_naics3$NAICS3_Name))

# Create the bar chart
ggplot(aggregated_data_naics3, aes(x = reorder(NAICS3_Name, Avg_Wage), y = Avg_Wage)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip coordinates for better readability
  labs(
    title = "Average Wages by NAICS3_Name",
    x = "NAICS3_Name",
    y = "Average Wage (Oct 2023)"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 8)  # Adjust text size for clarity
  )
```







```{r p6}
# Load necessary libraries
library(dplyr)

# Load datasets
employment_data <- read.csv("dataset/Employment2017.csv")
wage_data <- read.csv("dataset/wage_data.csv")

# Extract and format 3-digit NAICS codes from both datasets
wage_data <- wage_data %>%
  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))

employment_data <- employment_data %>%
  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))

# Identify matching 3-digit NAICS codes
matching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)

# Print the matching 3-digit NAICS codes
cat("Matching 3-digit NAICS codes:\n")
print(matching_codes)

# Print the values in the column Aug. 2024 for matching NAICS codes (keep only the first occurrence)
cat("\nAug. 2024 values for matching NAICS codes (first occurrence only):\n")
aug_2024_values <- wage_data %>%
  filter(NAICS3 %in% matching_codes) %>%
  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3
  select(NAICS3, Aug..2024)
print(aug_2024_values)



```



```{r p7}
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(tidyr)

# Load datasets
employment_data <- read.csv("dataset/Employment2017.csv")
wage_data <- read.csv("dataset/wage_data.csv")

# Extract and format 3-digit NAICS codes from both datasets
wage_data <- wage_data %>%
  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))

employment_data <- employment_data %>%
  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))

# Identify matching 3-digit NAICS codes
matching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)

# Print the matching 3-digit NAICS codes
cat("Matching 3-digit NAICS codes:\n")
print(matching_codes)

# Filter Aug. 2024 values for matching NAICS codes (keep only the first occurrence)
aug_2024_values <- wage_data %>%
  filter(NAICS3 %in% matching_codes) %>%
  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3
  select(NAICS3, Aug..2024)

# Merge Aug. 2024 wages with employment data to get racial distribution
merged_data <- aug_2024_values %>%
  left_join(employment_data, by = "NAICS3") %>%
  select(NAICS3, Aug..2024, WHT10, BLKT10, HISPT10, ASIANT10, AIANT10, NHOPIT10, TOMRT10) %>%
  gather(key = "Race", value = "Percentage", WHT10:TOMRT10) %>%
  mutate(Percentage = as.numeric(as.character(Percentage))) %>%
  filter(!is.na(Percentage))

# Sort data by wages in descending order
sorted_data <- aug_2024_values %>%
  arrange(desc(Aug..2024))

# Generate charts for each industry, sorted by wages
for (i in 1:nrow(sorted_data)) {
  naics_code <- sorted_data$NAICS3[i]
  wage <- sorted_data$Aug..2024[i]
  plot_data <- merged_data %>%
    filter(NAICS3 == naics_code)
  
  # Create the chart
  plot <- ggplot(plot_data, aes(x = Race, y = Percentage, fill = Race)) +
    geom_bar(stat = "identity") +
    labs(
      title = paste0("NAICS: ", naics_code, " | Wage: $", round(wage, 2)),
      x = "Race",
      y = "Percentage",
      fill = "Race"
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1)
    )
  
  # Print the chart
  print(plot)
}

```


```{r p8}
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(tidyr)

# Load datasets
employment_data <- read.csv("dataset/Employment2017.csv")
wage_data <- read.csv("dataset/wage_data.csv")

# Extract and format 3-digit NAICS codes from both datasets
wage_data <- wage_data %>%
  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))

employment_data <- employment_data %>%
  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))

# Identify matching 3-digit NAICS codes
matching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)

# Print the matching 3-digit NAICS codes
cat("Matching 3-digit NAICS codes:\n")
print(matching_codes)

# Filter Aug. 2024 values for matching NAICS codes (keep only the first occurrence)
aug_2024_values <- wage_data %>%
  filter(NAICS3 %in% matching_codes) %>%
  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3
  select(NAICS3, Aug..2024)

# Merge Aug. 2024 wages with employment data to get racial distribution
merged_data <- aug_2024_values %>%
  left_join(employment_data, by = "NAICS3") %>%
  select(NAICS3, Aug..2024, WHT10, BLKT10, HISPT10, ASIANT10, AIANT10, NHOPIT10, TOMRT10) %>%
  gather(key = "Race", value = "Percentage", WHT10:TOMRT10) %>%
  mutate(Percentage = as.numeric(as.character(Percentage))) %>%
  filter(!is.na(Percentage))

# Sort data by wages in descending order
sorted_data <- aug_2024_values %>%
  arrange(desc(Aug..2024))

# Generate charts for each industry, sorted by wages
for (i in 1:nrow(sorted_data)) {
  naics_code <- sorted_data$NAICS3[i]
  wage <- sorted_data$Aug..2024[i]
  plot_data <- merged_data %>%
    filter(NAICS3 == naics_code)
  
  # Create the chart
  plot <- ggplot(plot_data, aes(x = Race, y = Percentage, fill = Race)) +
    geom_bar(stat = "identity") +
    labs(
      title = paste0("NAICS: ", naics_code, " | Wage: $", round(wage, 2)),
      x = "Race",
      y = "Percentage",
      fill = "Race"
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1)
    )
  
  # Print the chart
  print(plot)
}

# Create charts for each race showing their proportion as wages decrease
race_proportions <- merged_data %>%
  group_by(Aug..2024, Race) %>%
  summarize(Total_Percentage = sum(Percentage, na.rm = TRUE)) %>%
  ungroup() %>%
  arrange(desc(Aug..2024))

# Generate a line plot for each race
race_plot <- ggplot(race_proportions, aes(x = Aug..2024, y = Total_Percentage, color = Race)) +
  geom_line(size = 1) +
  geom_point() +
  labs(
    title = "Racial Proportions as Wages Decrease",
    x = "Wages (Aug. 2024)",
    y = "Total Percentage",
    color = "Race"
  ) +
  theme_minimal()

# Print the race proportion plot
print(race_plot)

```





```{r}

# Load necessary libraries
library(dplyr)
library(ggplot2)
library(tidyr)

# Load datasets
employment_data <- read.csv("dataset/Employment2017.csv")
wage_data <- read.csv("dataset/wage_data.csv")

# Extract and format 3-digit NAICS codes from both datasets
wage_data <- wage_data %>%
  mutate(NAICS3 = substr(as.character(X2022.NAICS.code), 1, 3))

employment_data <- employment_data %>%
  mutate(NAICS3 = substr(as.character(NAICS3), 1, 3))

# Identify matching 3-digit NAICS codes
matching_codes <- intersect(wage_data$NAICS3, employment_data$NAICS3)

# Print the matching 3-digit NAICS codes
cat("Matching 3-digit NAICS codes:\n")
print(matching_codes)

# Filter Aug. 2024 values for matching NAICS codes (keep only the first occurrence)
aug_2024_values <- wage_data %>%
  filter(NAICS3 %in% matching_codes) %>%
  distinct(NAICS3, .keep_all = TRUE) %>%  # Keep only the first occurrence of each NAICS3
  select(NAICS3, Aug..2024)

# Merge Aug. 2024 wages with employment data to get racial distribution
merged_data <- aug_2024_values %>%
  left_join(employment_data, by = "NAICS3") %>%
  select(NAICS3, Aug..2024, WHT10, BLKT10, HISPT10, ASIANT10, AIANT10, NHOPIT10, TOMRT10) %>%
  gather(key = "Race", value = "Percentage", WHT10:TOMRT10) %>%
  mutate(Percentage = as.numeric(as.character(Percentage))) %>%
  filter(!is.na(Percentage))

# Sort data by wages in descending order
sorted_data <- aug_2024_values %>%
  arrange(desc(Aug..2024))

# Generate charts for each industry, sorted by wages
for (i in 1:nrow(sorted_data)) {
  naics_code <- sorted_data$NAICS3[i]
  wage <- sorted_data$Aug..2024[i]
  plot_data <- merged_data %>%
    filter(NAICS3 == naics_code)
  
  # Create the chart
  plot <- ggplot(plot_data, aes(x = Race, y = Percentage, fill = Race)) +
    geom_bar(stat = "identity") +
    labs(
      title = paste0("NAICS: ", naics_code, " | Wage: $", round(wage, 2)),
      x = "Race",
      y = "Percentage",
      fill = "Race"
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1)
    )
  
  # Print the chart
  print(plot)
}

# Calculate the mean percentage across all races
mean_percentage <- merged_data %>%
  group_by(Race) %>%
  summarize(Mean_Percentage = mean(Percentage, na.rm = TRUE))

# Merge mean percentage back into the data to calculate the difference from the mean
race_diff <- merged_data %>%
  left_join(mean_percentage, by = "Race") %>%
  mutate(Diff_From_Mean = Percentage - Mean_Percentage) %>%
  group_by(Aug..2024, Race) %>%
  summarize(Diff_From_Mean = mean(Diff_From_Mean, na.rm = TRUE)) %>%
  ungroup() %>%
  arrange(desc(Aug..2024)) %>%
  filter(abs(Diff_From_Mean) <= 10000)  # Remove outliers where difference exceeds 10,000

# Generate a line plot for each race showing the difference from the mean as wages decrease
diff_plot <- ggplot(race_diff, aes(x = Aug..2024, y = Diff_From_Mean, color = Race)) +
  geom_line(size = 1) +
  geom_point() +
  labs(
    title = "Difference from Mean Racial Representation as a Function of Wage",
    x = "Wages (Aug. 2024)",
    y = "Difference from Mean (%)",
    color = "Race"
  ) +
  theme_minimal()

# Print the difference plot
print(diff_plot)

```